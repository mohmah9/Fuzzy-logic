FUNCTION_BLOCK Inverted_Pendulum

    VAR_INPUT
        theta : REAL;
        x_dot : REAL;
        theta_dot : REAL;
    END_VAR

    VAR_OUTPUT
        F : REAL;
    END_VAR

    FUZZIFY theta
        TERM Leftt := (270, 0) (360, 1);
        TERM Left := (180,0) (197,1) (215,0);
        TERM Center := (170,0) (180,1) (190,0);
        TERM Right := (145,0) (162,1) (180,0);
        TERM Rightt := (0, 1) (90, 0);
    END_FUZZIFY

    FUZZIFY theta_dot
        TERM counterclockwise_veryfast := (3,0) (8,1);
        TERM counterclockwise_fast := (1,0) (3,1) (6,0);
        TERM counterclockwise := (0.1,0) (1,1) (4,0);
        TERM stop := (-0.5,0) (0,1) (0.5,0);
        TERM clockwise := (-4,0) (-1,1) (-0.1,0);
        TERM clockwise_fast := (-6,0) (-3,1) (-1,0);
        TERM clockwise_veryfast := (-8,1) (-3,0);
    END_FUZZIFY

    DEFUZZIFY F
        TERM GoLeftSuperFast := (-100,1) (-60,0);
        TERM GoLeftFaster := (-80,0) (-70,1) (-50,0);
        TERM GoLeftFast := (-60,0) (-50,1) (-20,0);
        TERM GoLeft := (-50,0) (-20,1) (-5,0);
        TERM GoLeftSlow := (-20,0) (-10,1) (0,0);
        TERM Stop := (-0.4,0) (0,1) (0.4,0);
        TERM GoRightSlow := (0,0) (10,1) (20,0);
        TERM GoRight := (5,0) (20,1) (50,0);
        TERM GoRightFast := (20,0) (50,1) (60,0);
        TERM GoRightFaster := (50,0) (70,1) (80,0);
        TERM GoRightSuperFast := (60,0) (100,1);
        ACCU : MAX;
        METHOD : COG;
        DEFAULT := 0;
    END_DEFUZZIFY

    RULEBLOCK Inverted_Pendulum
        AND : AlgebraicProduct;
        OR : MAX;

        RULE 1 : IF theta IS Rightt AND (theta_dot IS clockwise OR theta_dot IS clockwise_fast) THEN F IS GoRight;
        RULE 2 : IF theta IS Right THEN F IS GoRight;
        RULE 3 : IF theta IS Center AND theta_dot IS counterclockwise THEN F IS GoLeftSlow;
        RULE 4 : IF theta IS Center AND theta_dot IS counterclockwise_fast THEN F IS GoLeftFast;
        RULE 5 : IF theta IS Center AND theta_dot IS counterclockwise_veryfast THEN F IS GoLeftFaster;
        RULE 6 : IF theta IS Center AND theta_dot IS clockwise THEN F IS GoRightSlow;
        RULE 7 : IF theta IS Center AND theta_dot IS clockwise_fast THEN F IS GoRightFast;
        RULE 8 : IF theta IS Center AND theta_dot IS clockwise_veryfast THEN F IS GoRightFaster;
        RULE 9 : IF theta IS Left THEN F IS GoLeft;
        RULE 10 : IF theta IS Leftt AND (theta_dot IS counterclockwise OR theta_dot IS counterclockwise_fast)  THEN F IS GoLeft;







    END_RULEBLOCK

END_FUNCTION_BLOCK
